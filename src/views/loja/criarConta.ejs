<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Criar Conta</title>
    <!-- BOOTSTRAP ICONS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <!-- TAILWINDCSS -->
    <link rel="stylesheet" href="/css/output.css">
</head>
<body class="bg-gradient-to-r from-blue-400 to-blue-500 flex items-center justify-center h-screen relative" >
    <div style="background-image: url('/assets/papel-de-parede.png'); background-size: 50%;" class="w-screen h-screen absolute z-0"></div>

    <form action="" class="bg-white rounded-lg shadow-2xl w-full   max-w-96 lg:max-w-[700px] p-5 text-gray-700   z-10 lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-5">
        <div class="space-y-2">
            <div>
                <img src="/assets/logo.png" alt="" class="w-52 m-auto">
                <h2 class="text-xl text-gray-700 font-semibold pb-2 text-center">CRIAR CONTA</h2>
            </div>
            <div class="flex flex-col">
                <label for="" class="text-sm">Nome: <span class="text-red-400">*</span> </label>
                <input required type="text" class="px-4 py-2 focus:outline-none bg-gray-100">
            </div>
            <div class="flex flex-col">
                <label for="" class="text-sm">Email: <span class="text-red-400">*</span></label>
                <input required type="email" class="px-4 py-2 focus:outline-none bg-gray-100 ">
            </div>
            <div class="flex flex-col">
                <label for="" class="text-sm">Senha: <span class="text-red-400">*</span></label>
                <input required type="password" class="px-4 py-2 focus:outline-none bg-gray-100 ">
            </div>
            <div class="flex flex-col">
                <label for="" class="text-sm">Confirmar Senha: <span class="text-red-400">*</span></label>
                <input required type="password" class="px-4 py-2 focus:outline-none bg-gray-100 ">
            </div>
            <div class="pt-2">
                <button type="submit" class="bg-blue-500 hover:bg-blue-600 px-4 py-2 w-full text-white font-semibold">Salvar</button>
            </div>
        </div>

        <div id="container" class="hidden h-full object-cover max-w-auto overflow-x-hidden lg:flex">
            <img 
                src="https://img.freepik.com/fotos-premium/mulher-segurando-baloes-em-uma-festa-sobre-parede-azul-isolada_1368-75237.jpg" 
                alt=""
                class="hidden lg:block h-full object-cover max-w-auto"
            >
            <img 
                src="https://img.freepik.com/fotos-premium/mulher-feliz-segura-baloes-de-festa-em-estudio-mulher-com-balao-para-festa-isolada-em-amarelo_474717-102674.jpg" 
                alt=""
                class="hidden lg:block h-full object-cover max-w-auto"
            >
            <img 
                src="https://img.freepik.com/fotos-gratis/mulher-loira-romantica-com-um-grande-sorriso-posando-de-vestido-preto-na-parede-rosa-brilhante-aniversariante-encantadora-com-balao-de-helio_197531-21418.jpg" 
                alt=""
                class="hidden lg:block h-full object-cover max-w-auto"
            >
        </div>
        
        <script>
            window.addEventListener('DOMContentLoaded', (event) => {
                animacao();
            });
        
            function animacao() {
                const container = document.getElementById('container');
                const images = container.querySelectorAll('img');
                const duration = 1500; // Duração da animação em milissegundos
                const pauseDuration = 4000; // Duração da pausa em milissegundos
                const imageWidth = images[0].offsetWidth; // Largura de cada imagem
                let index = 0; // Índice da imagem atual
        
                function animate() {
                    // Calcular a posição de rolagem para a próxima imagem
                    const nextScrollLeft = index * imageWidth;
        
                    // Rolar suavemente para a próxima imagem
                    container.scrollTo({
                        left: nextScrollLeft,
                        behavior: 'smooth'
                    });
        
                    // Atualizar o índice para a próxima imagem
                    index = (index + 1) % images.length;
        
                    // Agendar a próxima animação após a pausa
                    setTimeout(animate, pauseDuration);
                }
        
                // Iniciar a animação
                animate();
            }
        </script>
        
        
    </form>

</body>
</html>